{
    "name": "Wolfram Language",
    "scopeName": "source.wolfram",
    "patterns": [
        {
            "match": "\\A(#!).*(?=$)",
            "name": "comment.line.shebang.wolfram",
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.wolfram"
                }
            }
        },
        {
            "include": "#expressions"
        }
    ],
    "repository": {
        "expressions": {
            "patterns": [
                {
                    "include": "#newline-escape"
                },
                {
                    "include": "#comment-block"
                },
                {
                    "include": "#literals"
                },
                {
                    "include": "#shorthand"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#patterns"
                },
                {
                    "include": "#functions"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#bracketing"
                }
            ]
        },
        "newline-escape": {
            "patterns": [
                {
                    "match": "\\\\\\r?\\n",
                    "name": "constant.character.escape.wolfram"
                }
            ]
        },
        "named-characters": {
            "patterns": [
                {
                    "match": "\\\\\\[([0-9a-zA-Z]+)\\]",
                    "name": "constant.character.built-in.wolfram"
                }
            ]
        },
        "comment-block": {
            "patterns": [
                {
                    "begin": "\\(\\*",
                    "end": "\\*\\)",
                    "name": "comment.block.wolfram",
                    "patterns": [
                        {
                            "include": "#comment-block"
                        }
                    ]
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "match": "(?x)\n(?:\n  ([1-9]\\d*\\^\\^)                                  # base\n  ((?:[0-9a-zA-Z]+\\.?|\\.[0-9a-zA-Z])[0-9a-zA-Z]*)       # value\n  |\n  ((?:\\d+\\.?|\\.\\d)\\d*)                                    # value\n)\n(?:\n  (\\`\\`(?:(?:\\d+\\.?|\\.\\d)\\d*)?)                           # accuracy\n  |\n  (\\`(?:(?:\\d+\\.?|\\.\\d)\\d*)?)                             # precision\n)?\n(\\*\\^[+-]?(?:\\d+\\.?|\\.\\d)\\d*)?                            # exponent",
                    "name": "constant.numeric.wolfram",
                    "captures": {
                        "1": {
                            "name": "constant.numeric.base.wolfram"
                        },
                        "4": {
                            "name": "constant.numeric.accuracy.wolfram"
                        },
                        "5": {
                            "name": "constant.numeric.precision.wolfram"
                        },
                        "6": {
                            "name": "constant.numeric.exponent.wolfram"
                        }
                    }
                },
                {
                    "begin": "\"",
                    "end": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.wolfram"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.wolfram"
                        }
                    },
                    "name": "string.quoted.wolfram",
                    "patterns": [
                        {
                            "include": "#named-characters"
                        },
                        {
                            "include": "#newline-escape"
                        },
                        {
                            "match": "\\\\[ !\"%&()*+/@\\\\^_`bfnrt<>]",
                            "name": "constant.character.escape.wolfram"
                        },
                        {
                            "match": "\\\\[0-7]{3}|\\\\\\.[0-9A-Fa-f]{2}|\\\\:[0-9A-Fa-f]{4}",
                            "name": "constant.character.encoding.wolfram"
                        },
                        {
                            "match": "(?x)\n\\\\[0-7]{1,2}(?=[^0-7])|\n\\\\\\.[0-9A-Fa-f]?(?=[^0-9A-Fa-f])|\n\\\\:[0-9A-Fa-f]{0,3}(?=[^0-9A-Fa-f])",
                            "name": "invalid.character.encoding.wolfram"
                        },
                        {
                            "match": "\\\\[a-zA-Z\\[]",
                            "name": "invalid.character.escape.wolfram"
                        }
                    ]
                }
            ]
        },
        "shorthand": {
            "patterns": [
                {
                    "match": "(%\\d+|%+)",
                    "name": "storage.type.Out.wolfram"
                },
                {
                    "match": "(::)\\s*([0-9a-zA-Z]+)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.MessageName.wolfram"
                        },
                        "2": {
                            "name": "string.unquoted.wolfram"
                        }
                    }
                },
                {
                    "match": "(<<|>>>?) *([a-zA-Z0-9`/.!_:$*~?\\\\-]+) *(?=[\\)\\]\\},;]|$)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.flow.wolfram"
                        },
                        "2": {
                            "name": "string.unquoted.filename.wolfram"
                        }
                    }
                },
                {
                    "begin": "~",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.operator.call.wolfram"
                        }
                    },
                    "end": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)?\\s*(~)",
                    "endCaptures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#function-identifier"
                                }
                            ]
                        },
                        "2": {
                            "name": "keyword.operator.call.wolfram"
                        }
                    },
                    "name": "meta.infix.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "match": "(//|[@/]\\*)\\s*(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.call.wolfram"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "include": "#function-identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)\\s*(?=@{1,3}|//?@|[/@]\\*)",
                    "captures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#function-identifier"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "match": "\\/\\/?\\.",
                    "name": "keyword.operator.replace.wolfram"
                },
                {
                    "match": "//@?|[/@][@*]|@{1,3}|~",
                    "name": "keyword.operator.call.wolfram"
                },
                {
                    "match": "=?[=!]=|[<>]=|<(?!\\|)|(?<!\\|)>",
                    "name": "keyword.operator.comparison.wolfram"
                },
                {
                    "match": "\\|\\||&&|!",
                    "name": "keyword.operator.logical.wolfram"
                },
                {
                    "match": "\\^?:?=|=.|/:|[+\\-*/]=",
                    "name": "keyword.operator.assignment.wolfram"
                },
                {
                    "match": "<->|[-:]>",
                    "name": "keyword.operator.rule.wolfram"
                },
                {
                    "match": "\\/;",
                    "name": "keyword.operator.condition.wolfram"
                },
                {
                    "match": "\\.\\.\\.?",
                    "name": "keyword.operator.repeat.wolfram"
                },
                {
                    "match": "\\+\\+|--|\\*\\*|[+\\-*/^.]|'+",
                    "name": "keyword.operator.arithmetic.wolfram"
                },
                {
                    "match": "<<|>>>?",
                    "name": "keyword.operator.flow.wolfram"
                },
                {
                    "match": "<>|~~|\\|",
                    "name": "keyword.operator.string.wolfram"
                },
                {
                    "match": ";;",
                    "name": "keyword.operator.span.wolfram"
                },
                {
                    "match": ";",
                    "name": "keyword.operator.compound.wolfram"
                },
                {
                    "match": "&",
                    "name": "keyword.operator.function.wolfram entity.name.function.wolfram"
                },
                {
                    "match": "\\?\\??",
                    "name": "keyword.operator.definition.wolfram"
                },
                {
                    "include": "#named-characters"
                }
            ]
        },
        "patterns": {
            "patterns": [
                {
                    "begin": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)\\s*(:(?=[^:>=]))",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.wolfram"
                        },
                        "2": {
                            "name": "keyword.operator.Pattern.wolfram"
                        }
                    },
                    "end": "(?=[:-]>|:?=|\\/[;.\\/]|[\\]\\)\\},;&]|>>|<<|[\\n\\r])",
                    "name": "meta.pattern.wolfram",
                    "patterns": [
                        {
                            "include": "#post-pattern"
                        }
                    ]
                },
                {
                    "begin": "(?x)\n(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)?\n(?:\n  (_\\.)               # Default\n  |\n  (_{1,3})            # Blank, BlankSequence, BlankNullSequence\n  (`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)?   # Head\n)",
                    "beginCaptures": {
                        "0": {
                            "name": "variable.parameter.wolfram"
                        },
                        "2": {
                            "name": "variable.parameter.default.wolfram"
                        },
                        "3": {
                            "name": "variable.parameter.blank.wolfram"
                        },
                        "4": {
                            "name": "variable.parameter.head.wolfram"
                        }
                    },
                    "end": "(?=[:-]>|:?=|\\/[;.\\/]|[\\]\\)\\},;&]|>>|<<|[\\n\\r])",
                    "contentName": "meta.pattern.wolfram",
                    "patterns": [
                        {
                            "include": "#post-pattern"
                        }
                    ]
                }
            ]
        },
        "post-pattern": {
            "patterns": [
                {
                    "match": "(\\?)\\s*(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*(?=\\s*(:|[:-]>|:?=|\\/[;.\\/]|[\\]\\)\\},;&]|>>|<<|[\\n\\r])))?",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.PatternTest.wolfram"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "include": "#function-identifier"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": ":(?=[^:>=])",
                    "name": "keyword.operator.Optional.wolfram"
                },
                {
                    "include": "#expressions"
                }
            ]
        },
        "function-identifier": {
            "patterns": [
                {
                    "match": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*)[$a-zA-Z]+[$0-9a-zA-Z]*",
                    "name": "entity.name.function.wolfram",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.context.wolfram"
                        }
                    }
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "begin": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*[$a-zA-Z]+[$0-9a-zA-Z]*)\\s*(\\[(?!\\[))",
                    "beginCaptures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#function-identifier"
                                }
                            ]
                        },
                        "2": {
                            "name": "meta.block.wolfram punctuation.section.brackets.begin.wolfram"
                        }
                    },
                    "end": "\\]",
                    "endCaptures": {
                        "0": {
                            "name": "meta.block.wolfram punctuation.section.brackets.end.wolfram"
                        }
                    },
                    "contentName": "meta.block.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "match": "(`?(?:[$a-zA-Z]+[$0-9a-zA-Z]*`)*)[$a-zA-Z]+[$0-9a-zA-Z]*",
                    "name": "variable.other.wolfram",
                    "captures": {
                        "1": {
                            "name": "variable.other.context.wolfram"
                        }
                    }
                },
                {
                    "match": "#[a-zA-Z][0-9a-zA-Z]*|##?\\d*",
                    "name": "variable.parameter.slot.wolfram"
                }
            ]
        },
        "bracketing": {
            "patterns": [
                {
                    "match": ",",
                    "name": "punctuation.separator.sequence.wolfram"
                },
                {
                    "begin": "\\(",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.parens.begin.wolfram"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.parens.end.wolfram"
                        }
                    },
                    "name": "meta.parens.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "begin": "\\[\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.parts.begin.wolfram"
                        }
                    },
                    "end": "\\]\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.parts.end.wolfram"
                        }
                    },
                    "name": "meta.parts.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "begin": "\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.brackets.begin.wolfram"
                        }
                    },
                    "end": "\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.brackets.end.wolfram"
                        }
                    },
                    "name": "meta.brackets.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "begin": "{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.braces.begin.wolfram"
                        }
                    },
                    "end": "}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.braces.end.wolfram"
                        }
                    },
                    "name": "meta.braces.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "begin": "<\\|",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.association.begin.wolfram"
                        }
                    },
                    "end": "\\|>",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.association.end.wolfram"
                        }
                    },
                    "name": "meta.association.wolfram",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "begin": "(\\\\!)?\\\\\\(",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.box.begin.wolfram"
                        }
                    },
                    "end": "\\\\\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.box.end.wolfram"
                        }
                    },
                    "name": "meta.box.wolfram",
                    "patterns": [
                        {
                            "match": "\\\\[%&+_^]",
                            "name": "keyword.operator.x-scriptBox.wolfram"
                        },
                        {
                            "match": "\\\\/",
                            "name": "keyword.operator.FractionBox.wolfram"
                        },
                        {
                            "match": "\\\\@",
                            "name": "keyword.operator.SqrtBox.wolfram"
                        },
                        {
                            "match": "\\\\`",
                            "name": "keyword.operator.FormBox.wolfram"
                        },
                        {
                            "match": "\\\\\\*",
                            "name": "keyword.operator.box-constructor.wolfram"
                        },
                        {
                            "include": "#expressions"
                        }
                    ]
                }
            ]
        }
    }
}